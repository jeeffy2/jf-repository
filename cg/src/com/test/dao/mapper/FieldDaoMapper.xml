<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.test.dao.FieldDao">
    <resultMap type="com.test.model.Field" id="fieldMap">
		<result property="fieldId" column="field_id"/>
		<result property="cardTypeId" column="card_type_id"/>
		<result property="fieldName" column="field_name"/>
		<result property="fieldLabel" column="field_label"/>
		<result property="fieldType" column="field_type"/>
		<result property="fieldTypeClass" column="field_type_class"/>
		<result property="fieldTypeOptions" column="field_type_options"/>
		<result property="isRequired" column="is_required"/>
		<result property="createTime" column="create_time"/>
		<result property="createBy" column="create_by"/>
		<result property="updateTime" column="update_time"/>
		<result property="updateBy" column="update_by"/>

    </resultMap>
    
    <select id="getFieldList" resultMap="fieldMap">
    	select * from field
    </select>
    <select id="getFieldByPrimaryKey" parameterType="Integer" resultMap="fieldMap">
    	select * from field where field_id =#{fieldId}
    </select>
    
    <insert id="createField" parameterType="com.test.model.Field">
        <selectKey resultType="Integer"  order="AFTER" keyProperty="fieldId" >
        	SELECT LAST_INSERT_ID()
        </selectKey>
		INSERT INTO field(
			field_id,
			card_type_id,
			field_name,
			field_label,
			field_type,
			field_type_class,
			field_type_options,
			is_required,
			create_time,
			create_by,
			update_time,
			update_by
		)VALUES(
			#{fieldId},
			#{cardTypeId},
			#{fieldName},
			#{fieldLabel},
			#{fieldType},
			#{fieldTypeClass},
			#{fieldTypeOptions},
			#{isRequired},
			#{createTime},
			#{createBy},
			#{updateTime},
			#{updateBy}
		)
    </insert>
    
    <update id="updateField" parameterType="com.test.model.Field">
		UPDATE field set
			card_type_id = #{cardTypeId},
			field_name = #{fieldName},
			field_label = #{fieldLabel},
			field_type = #{fieldType},
			field_type_class = #{fieldTypeClass},
			field_type_options = #{fieldTypeOptions},
			is_required = #{isRequired},
			update_time = #{updateTime},
			update_by = #{updateBy}
		WHERE field_id = #{fieldId}

    </update>
    
    <delete id="deleteField" parameterType="Integer">
    	delete from  field where field_id =#{fieldId}
    </delete>
</mapper>